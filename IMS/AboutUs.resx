<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        O/319FE15pATAAAAAElFTkSuQmCC
</value>
  </data>
</root>